stages:
  - build
  - test
  - deploy


build:
    stage: build
    image:
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
    script:
        - mkdir -p /kaniko/.docker
        - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | 
            base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
        - >-
            /kaniko/executor
            --context "${CI_PROJECT_DIR}"
            --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
            --destination "${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_TAG}"

test:
  stage: test
  image: python:3.5.10-alpine
  script:
    - pip install -r requirements.txt -r requirements-test.txt
    - python -m unittest discover -s tests/ 
    - coverage run -m unittest discover -s tests/ 
    - coverage report --include ui/ui.py

deploy_to_stage:
  stage: deploy
  image: ${CI_REGISTRY}/project_dev/infra:latest
  variables:
    deploy_variable: "dev"
  script:
    - yc config set service-account-key $YC_TOKEN
    - yc managed-kubernetes cluster get-credentials test-cluster --external --force
    - helm upgrade --install -n ${deploy_variable} crawler ./.cicd/ui --set deployment=${deploy_variable}

deploy_to_prod:
  stage: deploy
  image: ${CI_REGISTRY}/project_dev/infra:latest
  variables:
    deploy_variable: "prod"
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'
      variables:
        deploy_variable: "prod" 
  script:
    - yc config set service-account-key $YC_TOKEN
    - yc managed-kubernetes cluster get-credentials test-cluster --external --force
    - helm upgrade --install -n ${deploy_variable} ui ./.cicd/ui --set deployment=${deploy_variable}
